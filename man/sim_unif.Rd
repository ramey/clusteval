% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_unif.r
\name{sim_unif}
\alias{sim_unif}
\title{Generates random variates from multivariate uniform populations.}
\usage{
sim_unif(n = rep(25, 5), delta = 0, seed = NULL)
}
\arguments{
\item{n}{a vector (of length \eqn{K_0}) of the sample sizes for each
population}

\item{delta}{the fixed distance between each population and the origin}

\item{seed}{seed for random number generation. (If \code{NULL}, does not set
seed)}
}
\value{
named list containing:
\describe{
  \item{x:}{A matrix whose rows are the observations generated and whose
  columns are the \code{p} features (variables)}
  \item{y:}{A vector denoting the population from which the observation in
  each row was generated.}
}
}
\description{
We generate \eqn{n} observations from each of \eqn{K_0} multivariate uniform
distributions such that the Euclidean distance between each of the
populations and the origin is equal and scaled by \eqn{\Delta \ge 0}.
}
\details{
To define the populations, let \eqn{x = (X_1, \ldots, X_p)'} be a
multivariate uniformly distributed random vector such that \eqn{X_j \sim
U(a_j^{(k)}, b_j^{(k)})} is an independently distributed uniform random
variable with \eqn{a_j^{(k)} < b_j^{(k)}} for \eqn{j = 1, \ldots, p}.

For each population, we set the mean of the distribution along one feature to
\eqn{\Delta}, while the remaining features have mean 0. The objective is to
have unit hypercubes with \eqn{p = K_0} where the population centroids
separate from each other in orthogonal directions as \eqn{\Delta} increases,
with no overlap for \eqn{\Delta \ge 1}.

Hence, let \eqn{(a_k^{k}, b_k^{(k)}) = c(\Delta - 1/2, \Delta + 1/2)}. For
the remaining ordered pairs, let \eqn{(a_j^{(k)}, b_j^{(k)}) = (-1/2,
1/2)}.

We generate \eqn{n_k} observations from \eqn{k}th population.

For \eqn{\Delta = 0}, the \eqn{K_0 = 5} populations are equal.

Notice that the support of each population is a unit hypercube with \eqn{p =
K_0} features. Moreover, for \eqn{\Delta \ge 1}, the populations are mutually
exclusive and entirely separated.
}
\examples{
data_generated <- sim_unif(seed = 42)
dim(data_generated$x)
table(data_generated$y)

data_generated2 <- sim_unif(n = 10 * seq_len(5), delta = 1.5)
table(data_generated2$y)
sample_means <- with(data_generated2,
                     tapply(seq_along(y), y, function(i) {
                            colMeans(x[i,])
                     }))
(sample_means <- do.call(rbind, sample_means))
}

